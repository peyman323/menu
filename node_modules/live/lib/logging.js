'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (container) {

  container.vent.on('register-plugin', function (_ref) {
    var moduleName = _ref.moduleName;
    var relPath = _ref.relPath;

    log('Registering plugin ' + _chalk2.default.bold(moduleName) + ' ' + _chalk2.default.gray(relPath));
  });

  container.vent.on('start-perform', function (name, _ref2) {
    //log(`Start Peform ${name}`)

    var source = _ref2.source;
    var callInfo = _ref2.callInfo;
    var stage = _ref2.stage;
  });

  container.vent.on('run-event', function (name, _ref3) {
    var source = _ref3.source;
    var callInfo = _ref3.callInfo;
    var stage = _ref3.stage;

    if (source) {
      var event = container.events[name];
      var info = event.callInfo;
      var link = _chalk2.default.gray((0, _liveCaller.makeIDELink)(info));
      var color = colorCod.getColor(source);
      var prettyEvent = _chalk2.default[color](stage + ':' + source);
      log('Callback ' + prettyEvent + ' called by ' + _chalk2.default.bold(event.moduleName));
      log('  ' + link);
      // TODO: Show description?
    } else {
        //const link = makeIDELink(callInfo).gray
        var link = '';
        log('Performing event \'' + name + '\' ' + link);
      }
  });

  container.vent.on('add-callback', function (name, callback) {
    log('  Subscribing to ' + _chalk2.default.blue(name));
    //log('  Subscribe to', chalk.bold(name), `(${callback.moduleName})`)
  });

  container.vent.on('invalid-module', function (text) {
    warn('Invalid Live module defined in:', text);
  });
};

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _string = require('string');

var _string2 = _interopRequireDefault(_string);

var _liveCaller = require('live-caller');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//region Imports

var _require = require('live-log')('live');

var log = _require.log;
var warn = _require.warn;

var _require2 = require('color-cod');

var ColorCode = _require2.ColorCode;

//endregion

var colorCod = new ColorCode();

module.exports = exports['default'];
//# sourceMappingURL=logging.js.map
